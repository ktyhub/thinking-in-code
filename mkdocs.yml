site_name: Thinking In Code
site_url: https://www.ktyhub.com
site_author: ktyhub
site_description: knowledge thinking you want to know
site_dir: site
copyright: 可微信搜索 《中间件源码》 联系，订阅内容。   <br/>  Copyright &copy; 2022 - 2024 ktyhub.com
  copyright   <br/> 部分内容由GPT提供 转载声明：  本文转载自 [原文标题](原文链接)，由[www.ktyhub.com](www.ktyhub.com)创作，遵循
  [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/) 许可协议。
theme:
  name: material
  language: zh
  static_templates:
  - 404.html
  include_search_page: false
  search_index_only: false
  features:
  - navigation.next_previous
  - content.code.annotate
  - content.tooltips
  - navigation.tabs
  - search.highlight
  - search.share
  - search.suggest
  palette:
  - scheme: default
    primary: white
    accent: white
    toggle:
      icon: material/brightness-7
      name: 切换到夜间阅读模式
  - scheme: slate
    primary: black
    accent: black
    toggle:
      icon: material/brightness-4
      name: 切换到白天阅读模式
  font:
    text: Noto Sans Traditional Chinese
    code: Noto Sans Traditional Chinese
extra:
  alternate:
  - name: 中文
    link: /zh/
    lang: zh
extra_css:
- stylesheets/extra.css
- mermaid.css
extra_javascript:
- /javascripts/google-tongji.js
- mermaid.min.js
- /javascripts/baidu-tongji.js
markdown_extensions:
- abbr
- admonition
- attr_list
- def_list
- footnotes
- md_in_html
- toc:
    permalink: true
- pymdownx.arithmatex:
    generic: true
- pymdownx.betterem:
    smart_enable: all
- pymdownx.caret
- pymdownx.details
- pymdownx.highlight:
    anchor_linenums: true
- pymdownx.inlinehilite
- pymdownx.snippets
- pymdownx.keys
- pymdownx.mark
- pymdownx.smartsymbols
- pymdownx.tabbed:
    alternate_style: true
- pymdownx.tasklist:
    custom_checkbox: true
- pymdownx.tilde
nav:
- 🏠  首页: /
- 📚  技术博客:
  - 📝 前言:
    - 🏠 首页: zh/chapter_preface/index.md
  - 🔍 技术调研:
    - 🔖 网址收藏: zh/chapter_post/site.md
    - ☁️ 解锁 ElasticJob 云原生实践的难题: zh/chapter_post/elasticjob_cloud.md
    - 📊 从指标到洞察力的普罗米修斯: zh/chapter_post/prometheus.md
    - 🌊 海量数据实时分析引擎Apache Flink: zh/chapter_post/flink.md
    - 📋 可观测性之Log4j2优雅日志打印: zh/chapter_post/log4j2.md
    - 📏 可观测性神器之 Micrometer: zh/chapter_post/micrometer.md
    - 🔄 可观测性之Micrometer Tracing: zh/chapter_post/micrometer_tracing.md
    - 📈 大数据实时在线分析为何选择clickhouse？: zh/chapter_post/clickhouse.md
  - ⚡ Flux:
    - 🌟 Flux基础: zh/chaptor_reactor/Flux.md
    - 🔧 1-Flux创建原理: zh/chaptor_reactor/1-Flux.md
    - 🚀 2-Flux.push创建与发布: zh/chaptor_reactor/2-Flux.push.md
    - 🛠️ 3-Flux.handle操作: zh/chaptor_reactor/3-Flux.handle.md
    - 🧩 4-Mono基础: zh/chaptor_reactor/4-Momo.md
    - 👥 5-BaseSubscriber使用: zh/chaptor_reactor/5-BaseSubscriber.md
    - ⏱️ 6-调度器Scheduler: zh/chaptor_reactor/6-Scheduler.md
    - 🔄 7-弹性调度器Elastic: zh/chaptor_reactor/7-Schedulers.elastic.md
    - 📤 8-Flux发布线程控制: zh/chaptor_reactor/8-Flux.pushlishOn.md
    - 📥 9-Flux订阅线程控制: zh/chaptor_reactor/9-Flux.subscribeOn.md
    - 🚦 10-Flux并行处理: zh/chaptor_reactor/10-Flux.parallel.md
    - 🏃 11-ParallelFlux运行: zh/chaptor_reactor/11-ParallelFlux.runOn.md
    - 🔍 12-过滤器Filter: zh/chaptor_reactor/12-Filter.md
    - 🔄 13-转换transform: zh/chaptor_reactor/13-transform.md
    - 📦 14-缓冲与分组: zh/chaptor_reactor/14-​​buffer​​_window​​_groupBy.md
    - 🔗 15-合并操作: zh/chaptor_reactor/15-merge_mergeSequential.md
    - 📄 16-扁平化映射: zh/chaptor_reactor/16-flatMap_flatMapSequential.md
    - 🧵 17-连接映射concatMap: zh/chaptor_reactor/17-concatMap.md
    - 🧩 18-combineLatest组合: zh/chaptor_reactor/18-combineLatest.md
    - 📡 19-单播处理器: zh/chaptor_reactor/19-UnicastProcessor.md
    - 🎮 20-直接处理器: zh/chaptor_reactor/20-DirectProcessor.md
  - 🤖 spring-ai-alibaba:
    - 📝 1-官网笔记: zh/chapter_spring_ai_alibaba/1-official-website.md
  - 📟 mcp:
    - 📝 1-官网笔记: zh/chapter_modelcontextprotocol/1-official-website.md
  - 🧠 spring-ai:
    - 📝 1-官网笔记: zh/chapter_spring_ai/1-official-website.md
  - ☸️ kubernetes(v1.9.9)(梳理中):
    - 📥 1-克隆K8S源码: zh/chapter_kubernetes/1-index.md
    - 🚀 2-ApiServer主流程: zh/chapter_kubernetes/2-apiserver.md
    - ⚙️ 3-ApiServer配置初始化: zh/chapter_kubernetes/3-apiserver-server-run-options.md
    - 🚩 4-ApiServer命令行标记: zh/chapter_kubernetes/4-apiserver-add-flags.md
    - 🔗 5-ApiServer-API服务器链创建: zh/chapter_kubernetes/5-apiserver-server-run.md
  - ⏱️ ElasticJob(V2.1.5):
    - 📚 1-分布式调度系统简介: zh/chapter_elasticjob/1-introduce.md
    - 📋 2-注册中心的设计原理: zh/chapter_elasticjob/2-reg.md
    - 🛠️ 3-建造者构造作业配置: zh/chapter_elasticjob/3-job-config.md
    - 📐 4-调度作业模版类设计: zh/chapter_elasticjob/4-job-template.md
    - 💾 5-分布式场景下存储的: zh/chapter_elasticjob/5-job-config-storage.md
    - 🧩 6-单例模式作业注册表: zh/chapter_elasticjob/6-job-registry.md
    - ⏲️ 7-Quartz下的单机执行: zh/chapter_elasticjob/7-quartz.md
    - 🔄 8-系统启动时的生命周期: zh/chapter_elasticjob/8-job-life.md
    - 👂 9-调度作业的监听器大全: zh/chapter_elasticjob/9-listener.md
    - 🔒 10-分布式锁实现选主节点: zh/chapter_elasticjob/10-leader-latch.md
    - 💽 11-服务和进程信息持久化: zh/chapter_elasticjob/11-server-instance.md
  - 🐘 Zookeeper(V3.6.2):
    - 🌟 1-入门简介: zh/chapter_zookeeper/1-introduce.md
    - 📝 2-实现说明: zh/chapter_zookeeper/2-implement.md
    - 🔧 3-安装配置: zh/chapter_zookeeper/3-install.md
    - 👤 4-客户端入门: zh/chapter_zookeeper/4-client.md
    - 🔒 5-锁与生产者消费者: zh/chapter_zookeeper/5-produce-and-consumer.md
    - 👀 6-监听机制: zh/chapter_zookeeper/6-watch.md
    - 🚪 7-服务器入口: zh/chapter_zookeeper/7-start-source.md
    - ⚙️ 8-配置加载: zh/chapter_zookeeper/8-config.md
    - 🧹 9-日志清理任务: zh/chapter_zookeeper/9-clear-log-start.md
    - 🚀 10-初始化和启动: zh/chapter_zookeeper/10-init-main.md
    - 🌐 11-网络IO初始化: zh/chapter_zookeeper/11-reactor.md
    - 🧩 12-QuorumPeer初始化: zh/chapter_zookeeper/12-quorumpeer-init.md
    - 💾 13-初始化磁盘数据: zh/chapter_zookeeper/13-loaddatabase.md
    - 📡 14-Reactor网络IO: zh/chapter_zookeeper/14-reactor-io.md
    - 🗳️ 15-选举算法的准备等待选举: zh/chapter_zookeeper/15-election.md
    - 🔍 16-开始寻找leader: zh/chapter_zookeeper/16-lookforleader.md
  - 🐝 Dubbbo(V3.0.8):
    - 🔰 1-服务提供者的Demo: zh/chapter_dubbo/1-learn-from-a-demo.md
    - ⚙️ 2-ServiceConfig化: zh/chapter_dubbo/2-serviceconfig-config.md
    - 🧩 3-领域模型Model对象: zh/chapter_dubbo/3-model-init.md
    - 🔌 4-Extension的初始化: zh/chapter_dubbo/4-extension-init.md
    - 🔧 5-getAdaptiveExtension方法: zh/chapter_dubbo/5-getadaptiveextension.md
    - 🎁 6-Extension的Wrapper机制: zh/chapter_dubbo/6-extension-wrapper.md
    - ⚡ 7-Extension的Activate机制: zh/chapter_dubbo/7-extension-activate.md
    - 🚀 8-DubboBootstrap启动程序: zh/chapter_dubbo/8-dubbobootstrap.md
    - 📱 9-ApplicationConfig: zh/chapter_dubbo/9-application-config.md
    - 📋 10-RegistryConfig: zh/chapter_dubbo/10-registryconfig.md
    - 🔌 11-ProtocolConfig: zh/chapter_dubbo/11-protocolconfig.md
    - 🔄 12-启动生命周期: zh/chapter_dubbo/12-start-life-cycle.md
    - ⚙️ 13-配置中心初始化: zh/chapter_dubbo/13-configcenter.md
    - 📂 14-配置加载说明: zh/chapter_dubbo/14-config-load.md
    - 📊 15-元数据中心说明: zh/chapter_dubbo/15-metadata.md
    - 📦 16-模块发布器: zh/chapter_dubbo/16-moduledeployer.md
    - 🔄 17-提供者双注册: zh/chapter_dubbo/17-provider-register.md
    - 📤 18-元数据服务的导出: zh/chapter_dubbo/18-metadataService-export.md
    - 👥 19-消费者案例: zh/chapter_dubbo/19-consuemr-demo.md
    - 🔗 20-ReferenceConfig: zh/chapter_dubbo/20-reference-config.md
    - 🔍 21-ReferServices: zh/chapter_dubbo/21-refer-services.md
    - 🔄 22-自动决策应用级服务发现原理: zh/chapter_dubbo/22-migration-invoker.md
  - 📨 Apache Kafka Client(3.2):
    - 🌟 1-入门笔记: zh/chapter_kafka/1-introduce.md
    - 🚀 2-高性能高可用设计: zh/chapter_kafka/2-high-performence.md
    - 👤 3-客户端案例: zh/chapter_kafka/3-client-sample.md
    - 🏭 4-KafkaProducer: zh/chapter_kafka/4-kafka-producer.md
    - 📤 5-发送器Sender: zh/chapter_kafka/5-sender.md
    - 🧵 6-客户端的IO线程: zh/chapter_kafka/6-kafka-thread.md
    - 🚀 7-KafkaProducer的初始化: zh/chapter_kafka/7-kafka-producer-init.md
    - 📤 8-发送生产者数据: zh/chapter_kafka/8-send-producer-data.md
    - ⚡ 9-执行IO事件: zh/chapter_kafka/9-execute-io.md
    - 🔄 10-处理IO结果: zh/chapter_kafka/10-handle-io.md
  - 🌐 Netty(v4.x):
    - 🌟 1-Netty的入门: zh/chapter_netty/1-sample.md
    - 🚀 2-启动器Bootstrapp: zh/chapter_netty/2-bootstrap.md
    - 🔄 3-EventLoopGroup初始化: zh/chapter_netty/3-event-loop-group-init.md
    - ⚙️ 4-BootStrap属性设置: zh/chapter_netty/4-server-bootstrap-attr.md
  - 🔍 Druid(v1.2.11):
    - 🌟 1-入门案例: zh/chapter_druid/1-sample.md
    - 📊 2-数据源简介: zh/chapter_druid/2-datasource.md
    - 🔌 3-初始化连接: zh/chapter_druid/3-before-connection.md
    - 🚗 4-DbType与驱动类: zh/chapter_druid/4-db-type.md
    - 📊 5-监控信息线程: zh/chapter_druid/5-log-stats-thread.md
    - 🔗 6-物理连接创建线程: zh/chapter_druid/6-create-and-start-creator-thread.md
    - 🏗️ 7-创建数据库连接对象: zh/chapter_druid/7-driver-connect.md
    - ✅ 8-连接的首次验证: zh/chapter_druid/8-validate-connection.md
    - 💥 9-Druid销毁线程: zh/chapter_druid/9-druid-destroy.md
  - 🍃 SpringBoot(v2.6.6):
    - 🌟 1-入门案例: zh/chapter_springboot/1-sample.md
    - 🚀 2-run方法与SPI扫描: zh/chapter_springboot/2-spi.md
    - 🔄 3-SpringApplication的run方法: zh/chapter_springboot/3-run.md
    - 🌍 4-Environment初始化: zh/chapter_springboot/4-environment.md
    - 🏭 5-ApplicationContext初始化: zh/chapter_springboot/5-application-context-init.md
    - 📖 6-Reader和Scanner: zh/chapter_springboot/6-reader-scanner.md
    - ⚡ Spring Flux: zh/chapter_springboot/spring-flux.md
  - 📡 EMQX(V3.0):
    - 🌟 1-EMQX简介: zh/chapter_emqx/1-introduce.md
    - 🏗️ 2-项目结构: zh/chapter_emqx/2-code-struct.md
    - 🔄 3-内核层启动: zh/chapter_emqx/3-kernel.md
    - 🛣️ 4-路由层启动: zh/chapter_emqx/4-router.md
    - 🧩 5-代理层启动: zh/chapter_emqx/5-broker.md
  - 🐧 Linux内核源码:
    - 🔍 eBPF为什么很重要以及它的发展史: zh/chapter_linux/ebpf/1-ebpf.md
    - 👋 从一个Hello World程序入门eBPF: zh/chapter_linux/ebpf/ebpf_hello.md
    - 🌐 Linux内核中网络是如何进来的: zh/chapter_linux/net/net_in.md
    - 💻 CPU问题分析: zh/chapter_linux/problem/cpu.md
    - 🧠 Linux内存相关命令: zh/chapter_linux/problem/memory.md
    - 💾 Linux磁盘相关命令: zh/chapter_linux/problem/disk.md
    - 🌐 Linux网络相关命令: zh/chapter_linux/problem/net.md
- 🆕 新技术:
  - 📰 RELEASE NOTE:
    - 🏠 首页: zh/release_note/index.md
    - spring-framework:
        spring-framework v6.2.0-M6: zh/release_note/spring-framework/spring-framework_v6.2.0-M6.md
        spring-framework v6.2.0-M5: zh/release_note/spring-framework/spring-framework_v6.2.0-M5.md
        spring-framework v6.1.11: zh/release_note/spring-framework/spring-framework_v6.1.11.md
        spring-framework v6.1.10: zh/release_note/spring-framework/spring-framework_v6.1.10.md
        spring-framework v6.2.0-M4: zh/release_note/spring-framework/spring-framework_v6.2.0-M4.md
        spring-framework v6.1.9: zh/release_note/spring-framework/spring-framework_v6.1.9.md
        spring-framework v6.0.22: zh/release_note/spring-framework/spring-framework_v6.0.22.md
        spring-framework v6.1.12: zh/release_note/spring-framework/spring-framework_v6.1.12.md
        spring-framework v5.3.38: zh/release_note/spring-framework/spring-framework_v5.3.38.md
        spring-framework v6.2.0-RC1: zh/release_note/spring-framework/spring-framework_v6.2.0-RC1.md
        spring-framework v6.1.13: zh/release_note/spring-framework/spring-framework_v6.1.13.md
        spring-framework v6.2.0-RC3: zh/release_note/spring-framework/spring-framework_v6.2.0-RC3.md
        spring-framework v6.2.0-RC2: zh/release_note/spring-framework/spring-framework_v6.2.0-RC2.md
        spring-framework v6.1.14: zh/release_note/spring-framework/spring-framework_v6.1.14.md
    - frp:
        frp v0.60.0: zh/release_note/frp/frp_v0.60.0.md
        frp v0.54.0: zh/release_note/frp/frp_v0.54.0.md
        frp v0.61.0: zh/release_note/frp/frp_v0.61.0.md
    - influxdb:
        influxdb v2.7.9: zh/release_note/influxdb/influxdb_v2.7.9.md
        influxdb v2.7.8: zh/release_note/influxdb/influxdb_v2.7.8.md
        influxdb 2.7.7: zh/release_note/influxdb/influxdb_2.7.7.md
        influxdb v2.7.4: zh/release_note/influxdb/influxdb_v2.7.4.md
        influxdb v2.7.3: zh/release_note/influxdb/influxdb_v2.7.3.md
        influxdb v2.7.1: zh/release_note/influxdb/influxdb_v2.7.1.md
