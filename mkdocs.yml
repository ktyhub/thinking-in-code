site_name: Thinking In Code
site_url: https://www.ktyhub.com
site_author: ktyhub
site_description: knowledge thinking you want to know
site_dir: site
copyright: 可微信搜索 《中间件源码》 联系，订阅内容。   <br/>  Copyright &copy; 2022 - 2024 ktyhub.com
  copyright   <br/> 部分内容由GPT提供 转载声明：  本文转载自 [原文标题](原文链接)，由[www.ktyhub.com](www.ktyhub.com)创作，遵循
  [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/) 许可协议。
google_analytics:
- G-RFRF1TVRMP
- www.ktyhub.com
theme:
  name: material
  language: zh
  static_templates:
  - 404.html
  include_search_page: true
  search_index_only: true
  features:
  - navigation.instant
  - navigation.instant.prefetch
  - navigation.instant.progress
  - navigation.tabs.fixed
  - navigation.tabs.sticky
  - navigation.tracking
  - navigation.tabs
  - navigation.tabs.sticky
  - navigation.sections
  - navigation.expand
  - navigation.path
  - navigation.prune
  - navigation.indexes
  - navigation.top
  - navigation.footer
  - toc.follow
  - toc.integrate
  - search.highlight
  - search.share
  - search.suggest
  - content.code.copy
  - content.code.select
  - content.code.annotate
  - content.tooltips
  - content.tabs.link
  - content.action.edit
  - content.action.view
  - header.autohide
  - announce.dismiss
  palette:
  - scheme: default
    primary: black
    accent: grey
    toggle:
      icon: material/brightness-7
      name: 切换到夜间阅读模式
  - scheme: slate
    primary: black
    accent: grey
    toggle:
      icon: material/brightness-4
      name: 切换到白天阅读模式
  font:
    text: Noto Sans Traditional Chinese
    code: Noto Sans Traditional Chinese
plugins:
- search:
    lang:
    - en
    - zh
    separator: '[\s\-,:!=\[\]()"`/]+|\.(?!\d)|&[lg]t;|(?!\b)(?=[A-Z][a-z])'
extra:
  alternate:
  - name: 中文
    link: /zh/
    lang: zh
  social:
  - icon: fontawesome/brands/github
    link: https://github.com/ktyhub/thinking-in-code
    name: GitHub Repository
  - icon: fontawesome/solid/globe
    link: https://www.ktyhub.com
    name: Official Website
  - icon: fontawesome/brands/weixin
    link: '#'
    name: WeChat - 中间件源码
  analytics:
    provider: google
    property: G-RFRF1TVRMP
    feedback:
      title: Was this page helpful?
      ratings:
      - icon: material/emoticon-happy-outline
        name: This page was helpful
        data: 1
        note: Thanks for your feedback!
      - icon: material/emoticon-sad-outline
        name: This page could be improved
        data: 0
        note: Thanks for your feedback! Help us improve this page by <a href="https://github.com/ktyhub/thinking-in-code/issues/new/?title=[Feedback]+{title}+-+{url}"
          target="_blank" rel="noopener">telling us what you found lacking</a>.
  consent:
    title: Cookie consent
    description: We use cookies to recognize your repeated visits and preferences,
      as well as to measure the effectiveness of our documentation and whether users
      find what they're searching for. With your consent, you're helping us to make
      our documentation better.
    actions:
    - accept
    - reject
    - manage
extra_css:
- stylesheets/extra.css
- stylesheets/ux-enhanced.css
- mermaid.css
extra_javascript:
- /javascripts/google-tongji.js
- mermaid.min.js
- /javascripts/baidu-tongji.js
- /javascripts/fun-interactions.js
- /javascripts/ux-enhanced.js
extra_files:
- CNAME
markdown_extensions:
- abbr
- admonition
- attr_list
- def_list
- footnotes
- md_in_html
- toc:
    permalink: true
- pymdownx.arithmatex:
    generic: true
- pymdownx.betterem:
    smart_enable: all
- pymdownx.caret
- pymdownx.details
- pymdownx.highlight:
    anchor_linenums: true
- pymdownx.inlinehilite
- pymdownx.snippets
- pymdownx.keys
- pymdownx.mark
- pymdownx.smartsymbols
- pymdownx.tabbed:
    alternate_style: true
- pymdownx.tasklist:
    custom_checkbox: true
- pymdownx.tilde

nav:
- 🏠 首页: index
- 🚀 技术体系:
  - 🔥 热门技术:
    - ⚡ ElasticJob 分布式调度: zh/chapter_elasticjob/
    - ☸️ Kubernetes 云原生: zh/chapter_kubernetes/
    - 🤖 Spring AI 人工智能: zh/chapter_spring_ai/
    - 🐘 Zookeeper 分布式协调: zh/chapter_zookeeper/
    - 🌐 Dubbo 微服务框架: zh/chapter_dubbo/
  - 📊 大数据技术:
    - 🌊 Apache Kafka 消息队列: zh/chapter_kafka/
    - 🏠 ClickHouse 实时分析: zh/chapter_post/clickhouse/
    - 🌊 Apache Flink 流处理: zh/chapter_post/flink/
  - 🔍 可观测性:
    - 📝 Log4j2 日志系统: zh/chapter_post/log4j2/
    - 📊 Prometheus 监控: zh/chapter_post/prometheus/
    - 🔍 Micrometer 指标: zh/chapter_post/micrometer/
    - 🔗 Micrometer Tracing: zh/chapter_post/micrometer_tracing/
  - 🌐 网络通信:
    - 🚀 Netty 高性能网络: zh/chapter_netty/
- 🤖 AI 技术栈:
  - 🌱 Spring AI:
    - 📚 官网学习笔记: zh/chapter_spring_ai/1-official-website/
  - 🤖 Spring AI Alibaba:
    - 📚 官网学习笔记: zh/chapter_spring_ai_alibaba/1-official-website/
  - 🔌 Model Context Protocol:
    - 📚 官网学习笔记: zh/chapter_modelcontextprotocol/1-official-website/
- 📚 深度专题:
  - 🔗 精选网址收藏: zh/chapter_post/site/
  - ⚡ ElasticJob 云原生实践: zh/chapter_post/elasticjob_cloud/
- 📖 源码深度解析:
  - ⚡ ElasticJob (V2.1.5):
    - 📖 分布式调度系统简介: zh/chapter_elasticjob/1-introduce/
    - 🏗️ 注册中心的设计原理: zh/chapter_elasticjob/2-reg/
    - ⚙️ 建造者构造作业配置: zh/chapter_elasticjob/3-job-config/
    - 📋 调度作业模版类设计: zh/chapter_elasticjob/4-job-template/
    - 💾 分布式场景下存储配置: zh/chapter_elasticjob/5-job-config-storage/
    - 📝 单例模式作业注册表: zh/chapter_elasticjob/6-job-registry/
    - ⏰ Quartz下的单机执行: zh/chapter_elasticjob/7-quartz/
    - 🔄 系统启动时的生命周期: zh/chapter_elasticjob/8-job-life/
    - 👂 调度作业的监听器大全: zh/chapter_elasticjob/9-listener/
    - 🔒 分布式锁实现选主节点: zh/chapter_elasticjob/10-leader-latch/
    - 💾 服务和进程信息持久化: zh/chapter_elasticjob/11-server-instance/
  - 🐘 Zookeeper (V3.6.2):
    - 📖 入门简介: zh/chapter_zookeeper/1-introduce/
    - 🏗️ 实现说明: zh/chapter_zookeeper/2-implement/
    - ⚙️ 安装配置: zh/chapter_zookeeper/3-install/
    - 💻 客户端入门: zh/chapter_zookeeper/4-client/
    - 🔒 锁与生产者消费者: zh/chapter_zookeeper/5-produce-and-consumer/
    - 👂 监听机制: zh/chapter_zookeeper/6-watch/
    - 🚀 服务器入口: zh/chapter_zookeeper/7-start-source/
    - ⚙️ 配置加载: zh/chapter_zookeeper/8-config/
    - 🧹 日志清理任务: zh/chapter_zookeeper/9-clear-log-start/
    - 🔄 初始化和启动: zh/chapter_zookeeper/10-init-main/
    - 🌐 网络IO初始化: zh/chapter_zookeeper/11-reactor/
    - 🏗️ QuorumPeer初始化: zh/chapter_zookeeper/12-quorumpeer-init/
    - 💾 初始化磁盘数据: zh/chapter_zookeeper/13-loaddatabase/
    - 🌐 Reactor网络IO: zh/chapter_zookeeper/14-reactor-io/
    - 🗳️ 选举算法的准备等待选举: zh/chapter_zookeeper/15-election/
    - 🔍 开始寻找leader: zh/chapter_zookeeper/16-lookforleader/
  - ☸️ Kubernetes (v1.9.9):
    - 📥 克隆K8S源码: zh/chapter_kubernetes/1-index/
    - 🚀 ApiServer主流程: zh/chapter_kubernetes/2-apiserver/
    - ⚙️ ApiServer配置初始化: zh/chapter_kubernetes/3-apiserver-server-run-options/
    - 🏷️ ApiServer命令行标记: zh/chapter_kubernetes/4-apiserver-add-flags/
    - 🔗 ApiServer-API服务器链创建: zh/chapter_kubernetes/5-apiserver-server-run/
  - 🌐 Dubbo (V3.0.8):
    - 📖 服务提供者的Demo: zh/chapter_dubbo/1-learn-from-a-demo/
    - ⚙️ ServiceConfig化: zh/chapter_dubbo/2-serviceconfig-config/
    - 🏗️ 领域模型Model对象: zh/chapter_dubbo/3-model-init/
    - 🔧 Extension的初始化: zh/chapter_dubbo/4-extension-init/
    - 🔄 getAdaptiveExtension方法: zh/chapter_dubbo/5-getadaptiveextension/
    - 📦 Extension的Wrapper机制: zh/chapter_dubbo/6-extension-wrapper/
    - ⚡ Extension的Activate机制: zh/chapter_dubbo/7-extension-activate/
    - 🚀 DubboBootstrap启动程序: zh/chapter_dubbo/8-dubbobootstrap/
    - ⚙️ ApplicationConfig: zh/chapter_dubbo/9-application-config/
    - 📝 RegistryConfig: zh/chapter_dubbo/10-registryconfig/
    - 🌐 ProtocolConfig: zh/chapter_dubbo/11-protocolconfig/
    - 🔄 启动生命周期: zh/chapter_dubbo/12-start-life-cycle/
    - ⚙️ 配置中心初始化: zh/chapter_dubbo/13-configcenter/
    - 📥 配置加载说明: zh/chapter_dubbo/14-config-load/
    - 📊 元数据中心说明: zh/chapter_dubbo/15-metadata/
    - 📦 模块发布器: zh/chapter_dubbo/16-moduledeployer/
    - 📝 提供者双注册: zh/chapter_dubbo/17-provider-register/
    - 📤 元数据服务的导出: zh/chapter_dubbo/18-metadataService-export/
    - 💻 消费者案例: zh/chapter_dubbo/19-consuemr-demo/
    - ⚙️ ReferenceConfig: zh/chapter_dubbo/20-reference-config/
    - 🔗 ReferServices: zh/chapter_dubbo/21-refer-services/
    - 🤖 自动决策应用级服务发现原理: zh/chapter_dubbo/22-migration-invoker/
  - 🌊 Apache Kafka Client (3.2):
    - 📖 入门笔记: zh/chapter_kafka/1-introduce/
    - 🚀 高性能高可用设计: zh/chapter_kafka/2-high-performence/
    - 💻 客户端案例: zh/chapter_kafka/3-client-sample/
    - 📤 KafkaProducer: zh/chapter_kafka/4-kafka-producer/
    - 📨 发送器Sender: zh/chapter_kafka/5-sender/
    - 🧵 客户端的IO线程: zh/chapter_kafka/6-kafka-thread/
    - 🔄 KafkaProducer的初始化: zh/chapter_kafka/7-kafka-producer-init/
    - 📤 发送生产者数据: zh/chapter_kafka/8-send-producer-data/
    - ⚡ 执行IO事件: zh/chapter_kafka/9-execute-io/
    - 📥 处理IO结果: zh/chapter_kafka/10-handle-io/
  - 🚀 Netty (v4.x):
    - 📖 Netty的入门: zh/chapter_netty/1-sample/
    - 🚀 启动器Bootstrapp: zh/chapter_netty/2-bootstrap/
    - 🔄 EventLoopGroup初始化: zh/chapter_netty/3-event-loop-group-init/
    - ⚙️ BootStrap属性设置: zh/chapter_netty/4-server-bootstrap-attr/
  - 💧 Druid (v1.2.11):
    - 📖 入门案例: zh/chapter_druid/1-sample/
- 🆕 新技术发布:
  - 📋 发布说明总览: zh/release_note/index.md
  - 🍃 Spring Boot v3.3.12: zh/release_note/Spring-Boot_v3.3.12/
  - 🤖 OpenHands 0.39.0: zh/release_note/OpenHands_0.39.0_-_2025-05-20/
  - ⚡ FastGPT V4.9.10: zh/release_note/FastGPT_V4.9.10-alpha/
